// Code generated by mockery v2.43.2. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Metrics is an autogenerated mock type for the Metrics type
type Metrics struct {
	mock.Mock
}

// AddProviderCountForMarket provides a mock function with given fields: market, count
func (_m *Metrics) AddProviderCountForMarket(market string, count int) {
	_m.Called(market, count)
}

// AddProviderTick provides a mock function with given fields: providerName, pairID, success
func (_m *Metrics) AddProviderTick(providerName string, pairID string, success bool) {
	_m.Called(providerName, pairID, success)
}

// AddTick provides a mock function with given fields:
func (_m *Metrics) AddTick() {
	_m.Called()
}

// AddTickerTick provides a mock function with given fields: ticker
func (_m *Metrics) AddTickerTick(ticker string) {
	_m.Called(ticker)
}

// SetSlinkyBuildInfo provides a mock function with given fields:
func (_m *Metrics) SetSlinkyBuildInfo() {
	_m.Called()
}

// UpdateAggregatePrice provides a mock function with given fields: pairID, decimals, price
func (_m *Metrics) UpdateAggregatePrice(pairID string, decimals uint64, price float64) {
	_m.Called(pairID, decimals, price)
}

// UpdatePrice provides a mock function with given fields: name, pairID, decimals, price
func (_m *Metrics) UpdatePrice(name string, pairID string, decimals uint64, price float64) {
	_m.Called(name, pairID, decimals, price)
}

// NewMetrics creates a new instance of Metrics. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMetrics(t interface {
	mock.TestingT
	Cleanup(func())
}) *Metrics {
	mock := &Metrics{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
