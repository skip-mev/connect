syntax = "proto3";
package slinky.marketmap.v1;

import "cosmos/msg/v1/msg.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "amino/amino.proto";
import "slinky/marketmap/v1/market.proto";
import "slinky/marketmap/v1/params.proto";

option go_package = "github.com/skip-mev/slinky/x/marketmap/types";

// Msg is the message service for the x/marketmap module.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateMarketMap creates markets from the given message.
  rpc UpdateMarketMap(MsgUpdateMarketMap) returns (MsgUpdateMarketMapResponse);

  // Params defines a method for updating the x/marketmap module parameters.
  rpc Params(MsgParams) returns (MsgParamsResponse);
}

// CreateMarket contains all information needed to create a new market.
message CreateMarket {
  // Ticker is the on-chain representation of the ticker. This is the target
  // ticker that the prices of the set of tickers will be converted to.
  Ticker ticker = 1 [ (gogoproto.nullable) = false ];

  // Providers maps provider names to their off-chain
  // representations for the given ticker of the message.
  Providers providers = 2 [ (gogoproto.nullable) = false ];

  // Paths is the list of convertable markets that will be used to convert the
  // prices of a set of tickers to a common ticker.
  Paths paths = 3 [ (gogoproto.nullable) = false ];
}

// MsgUpdateMarketMap defines a message carrying a payload for updating the
// x/marketmap module.
message MsgUpdateMarketMap {
  option (cosmos.msg.v1.signer) = "signer";
  option (amino.name) = "slinky/x/marketmap/MsgUpdateMarketMap";

  option (gogoproto.equal) = false;

  // Signer is the signer of this transaction.
  string signer = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // CreateMarkets is the list of all markets to be created for the given
  // transaction.
  repeated CreateMarket create_markets = 2 [ (gogoproto.nullable) = false ];
}

// MsgUpdateMarketMapResponse is the response message for MsgUpdateMarketMap.
message MsgUpdateMarketMapResponse {}

// MsgParams defines the Msg/Params request type. It contains the
// new parameters for the x/marketmap module.
message MsgParams {
  option (cosmos.msg.v1.signer) = "authority";

  // Params defines the new parameters for the x/marketmap module.
  Params params = 1 [ (gogoproto.nullable) = false ];
  // Authority defines the authority that is updating the x/marketmap module
  // parameters.
  string authority = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// MsgParamsResponse defines the Msg/Params response type.
message MsgParamsResponse {}
