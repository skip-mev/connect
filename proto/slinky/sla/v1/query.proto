syntax = "proto3";
package slinky.sla.v1;

option go_package = "github.com/skip-mev/slinky/x/sla/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "slinky/sla/v1/genesis.proto";

// Query is the query service for the x/sla module.
service Query {
  // GetAllSLAs returns all SLAs that the module is currently enforcing.
  rpc GetAllSLAs(GetAllSLAsRequest) returns (GetAllSLAsResponse) {
    option (google.api.http) = {
      get : "/slinky/sla/v1/slas"
    };
  };

  // GetPriceFeeds returns all price feeds that the module is currently
  // tracking. This request type inputs the SLA ID to query price feeds for.
  rpc GetPriceFeeds(GetPriceFeedsRequest) returns (GetPriceFeedsResponse) {
    option (google.api.http) = {
      get : "/slinky/sla/v1/price_feeds"
    };
  };

  // Params returns the current SLA module parameters.
  rpc Params(ParamsRequest) returns (ParamsResponse) {
    option (google.api.http) = {
      get : "/slinky/sla/v1/params"
    };
  };
}

// QueryAllSLAsRequest is the request type for the Query/GetAllSLAs RPC method.
message GetAllSLAsRequest {}

// QueryAllSLAsResponse is the response type for the Query/GetAllSLAs RPC
// method.
message GetAllSLAsResponse {
  repeated PriceFeedSLA slas = 1
      [ (gogoproto.nullable) = false, (gogoproto.customname) = "SLAs" ];
}

// QueryGetPriceFeedsRequest is the request type for the Query/GetPriceFeeds RPC
// method.
message GetPriceFeedsRequest {
  // ID defines the SLA to query price feeds for.
  string id = 1 [ (gogoproto.customname) = "ID" ];
}

// QueryGetPriceFeedsResponse is the response type for the Query/GetPriceFeeds
// RPC method.
message GetPriceFeedsResponse {
  // PriceFeeds defines the price feeds for the given SLA.
  repeated PriceFeed price_feeds = 1 [ (gogoproto.nullable) = false ];
}

// QueryParamsRequest is the request type for the Query/Params RPC method.
message ParamsRequest {}

// QueryParamsResponse is the response type for the Query/Params RPC method.
message ParamsResponse { Params params = 1 [ (gogoproto.nullable) = false ]; }